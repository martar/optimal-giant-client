// Generated by CoffeeScript 1.3.3
(function() {
  var findCoords;

  importScripts('solver.js');

  'finds the coordinates from the length of the vector and \ntan angle of inclination of the velocity vector';


  findCoords = function(vProp, length) {
    var coor;
    coor = [];
    coor.push(length / (Math.sqrt(1 + vProp * vProp)));
    coor.push(vProp * length / (Math.sqrt(1 + vProp * vProp)));
    return coor;
  };

  self.onmessage = function(ev) {
    var duration, endPoint, kappa, lol, lol2, n, pos, skier, skier2, skiers, start, steep, steepPositions, t0, t1, tt0, tt1, v, vstart, x, _i, _len;
    start = Date.now();
    vstart = [1, 10];
    skier = new Skier(this.mi = 0.05, this.m = 60, this.C = 0.6, this.A = 0.2, this.solver = new OptimalGiant.Solver, this.x0 = [0, 0], this.v0 = vstart);
    n = 0;
    steep = 0.01;
    t0 = 0;
    endPoint = [50, 50];
    kappa = skier.computeKappa(endPoint);
    while (!skier.isNear(endPoint)) {
      t1 = t0 + steep;
      skier.move(t0, t1, kappa, 1);
      t0 = t1;
    }
    skier.result = t0;
    duration = Date.now() - start;
    steepPositions = ((function() {
      var _i, _len, _ref, _results, _step;
      _ref = skier.getPositions();
      _results = [];
      for (_i = 0, _len = _ref.length, _step = 120; _i < _len; _i += _step) {
        x = _ref[_i];
        _results.push(x);
      }
      return _results;
    })()).reverse();
    skier2 = new Skier(this.mi = 0.05, this.m = 60, this.C = 0.6, this.A = 0.2, this.solver = new OptimalGiant.Solver, this.x0 = [0, 0], this.v0 = vstart);
    kappa = 0.000001;
    t0 = 0;
    for (_i = 0, _len = steepPositions.length; _i < _len; _i++) {
      pos = steepPositions[_i];
      t1 = t0 + steep;
      v = findCoords((pos[1] - skier2.getPositions()[0][1]) / (pos[0] - skier2.getPositions()[0][0]), Math.sqrt(Math.pow(skier2.getVelocities()[0][0], 2) + Math.pow(skier2.getVelocities()[0][1], 2)));
      skier2.moveWithArbitraryV(v, t0, t1, kappa, 1);
      tt0 = 0;
      while (!skier2.isNear(pos)) {
        tt1 = tt0 + steep;
        skier2.move(tt0, tt1, kappa, 1);
        tt0 = tt1;
      }
      t0 = t1 + tt0;
    }
    skier2.result = t0;
    skiers = [];
    skier.color = "yellow";
    skiers.push(skier);
    skiers.push(skier2);
    lol = (function() {
      var _j, _len1, _results;
      _results = [];
      for (_j = 0, _len1 = skiers.length; _j < _len1; _j++) {
        skier = skiers[_j];
        _results.push({
          time: skier.result,
          positions: skier.getPositions(),
          color: skier.color
        });
      }
      return _results;
    })();
    lol2 = (function() {
      var _j, _len1, _results;
      _results = [];
      for (_j = 0, _len1 = skiers.length; _j < _len1; _j++) {
        skier = skiers[_j];
        _results.push({
          time: skier.result
        });
      }
      return _results;
    })();
    return postMessage({
      results: lol2,
      skiers: lol,
      pos: steepPositions.reverse()
    });
  };

}).call(this);
